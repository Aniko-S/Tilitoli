{"version":3,"sources":["Button.js","initialValues.js","InitializeMap.js","targetMap.js","PopUp.js","Table.js","Time.js","App.js","reportWebVitals.js","index.js"],"names":["Button","onClick","children","className","baseValues","numberList","isValid","count","i","length","j","changeNotEmptyLastTwo","lastNotEmptyIndex","lastNotEmptyElement","initialValues","Math","floor","random","shuffleNumberList","initializeMap","baseMap","objectList","x","y","text","targetMap","PopUp","number","Modal","show","Header","Body","prettyMs","colonNotation","keepDecimalsOnWholeSeconds","Footer","Table","setRun","setNumber","useState","map","setMap","solved","setSolved","step","clickedField","emptyField","searchEmptyField","canStep","changeFields","isSolved","abs","fieldA","fieldB","tempMap","tempText","Time","run","useEffect","interval","setInterval","clearInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAUeA,MARf,YAAwC,IAAtBC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACzB,OAAIA,EACK,wBAAQC,UAAU,eAAeF,QAASA,EAA1C,SAAoDC,IAEpD,ICNLE,EAAa,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAEtDC,EAAU,UAAOD,GAYjBE,EAAU,WAEd,IADA,IAAIC,EAAQ,EACHC,EAAI,EAAGA,EAAIH,EAAWI,OAAS,EAAGD,IACzC,IAAK,IAAIE,EAAIF,EAAI,EAAGE,EAAIL,EAAWI,OAAS,EAAGC,IACzCL,EAAWG,GAAKH,EAAWK,IAC7BH,IAIN,OAAOA,EAAQ,IAAM,GAGjBI,EAAwB,WAC5B,IAAMC,EAAoBP,EAAWI,OAAS,EACxCI,EAAsBR,EAAWO,GACvCP,EAAWO,GAAqBP,EAAWO,EAAoB,GAC/DP,EAAWO,EAAoB,GAAKC,GAQvBC,MALf,WAEE,OA/BwB,WACxB,IAAK,IAAIN,EAAIH,EAAWI,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC9C,IAAME,EAAIK,KAAKC,MAAMD,KAAKE,UAAYT,EAAI,IADI,EAEb,CAACH,EAAWK,GAAIL,EAAWG,IAA3DH,EAAWG,GAFkC,KAE9BH,EAAWK,GAFmB,KAI3CJ,KACHK,IAwBFO,GACO,CAAEb,aAAYD,eCHRe,MA9Bf,WAqBE,IApBA,IAAMC,EAAU,CACd,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,KAGHf,EAAeS,IAAfT,WAEFgB,EAAa,CACjB,CAAEC,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,IAC/B,CAAEiB,EAAG,EAAGC,EAAG,EAAGC,KAAMnB,EAAW,KAGxBG,EAAI,EAAGA,EAAIa,EAAWZ,OAAQD,IAAK,CAC1C,IAAMc,EAAID,EAAWb,GAAGc,EAClBC,EAAIF,EAAWb,GAAGe,EACxBH,EAAQE,GAAGC,GAAKF,EAAWb,GAG7B,OAAOY,GC3BDhB,EAAeU,IAAfV,WAOOqB,EANG,CAChB,CAACrB,EAAW,GAAIA,EAAW,GAAIA,EAAW,IAC1C,CAACA,EAAW,GAAIA,EAAW,GAAIA,EAAW,IAC1C,CAACA,EAAW,GAAIA,EAAW,GAAIA,EAAW,K,+BCmB7BsB,MApBf,YAAqC,IAApBzB,EAAmB,EAAnBA,QAAS0B,EAAU,EAAVA,OACxB,OACE,eAACC,EAAA,EAAD,CAAOC,MAAM,EAAb,UACE,cAACD,EAAA,EAAME,OAAP,UACE,gEAEF,eAACF,EAAA,EAAMG,KAAP,mBACQ,IACLC,IAASL,EAAQ,CAChBM,eAAe,EACfC,4BAA4B,OAGhC,cAACN,EAAA,EAAMO,OAAP,UACE,wBAAQlC,QAASA,EAAjB,sBCmGOmC,MAhHf,YAA+C,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,UAAWX,EAAU,EAAVA,OAAU,EACtBY,oBAAS,kBAAMpB,OADO,mBACrCqB,EADqC,KAChCC,EADgC,OAEhBF,oBAAS,GAFO,mBAErCG,EAFqC,KAE7BC,EAF6B,KAItCC,EAAO,SAACC,GACZ,IAAMC,EAAaC,EAAiBP,GAChCQ,EAAQH,EAAcC,IACxBG,EAAaJ,EAAcC,GAE7BI,KAGIH,EAAmB,WACvB,IAAK,IAAIvC,EAAI,EAAGA,EAAIgC,EAAI/B,OAAQD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAI8B,EAAI/B,OAAQC,IAC9B,GAAuB,KAAnB8B,EAAIhC,GAAGE,GAAGc,KACZ,OAAOgB,EAAIhC,GAAGE,IAMhBsC,EAAU,SAACH,EAAcC,GAC7B,OAC8C,IAA5C/B,KAAKoC,IAAIN,EAAavB,EAAIwB,EAAWxB,IACrCuB,EAAatB,IAAMuB,EAAWvB,GAKc,IAA5CR,KAAKoC,IAAIN,EAAatB,EAAIuB,EAAWvB,IACrCsB,EAAavB,IAAMwB,EAAWxB,GAO5B2B,EAAe,SAACG,EAAQC,GAC5B,IAAMC,EAAU,CAAC,YAAId,EAAI,IAAT,YAAkBA,EAAI,IAAtB,YAA+BA,EAAI,KAC7Ce,EAAWH,EAAO5B,KACxB8B,EAAQF,EAAO9B,GAAG8B,EAAO7B,GAAGC,KAAO6B,EAAO7B,KAC1C8B,EAAQD,EAAO/B,GAAG+B,EAAO9B,GAAGC,KAAO+B,EACnCd,GAAO,kBAAMa,MAGTJ,EAAW,WACf,IAAK,IAAI1C,EAAI,EAAGA,EAAIgC,EAAI/B,OAAQD,IAC9B,IAAK,IAAIE,EAAI,EAAGA,EAAI8B,EAAIhC,GAAGC,OAAQC,IACjC,GAAI8B,EAAIhC,GAAGE,GAAGc,OAASC,EAAUjB,GAAGE,GAClC,OAINiC,GAAU,GACVN,GAAO,IAGT,OACE,mCACE,sBAAKlC,UAAU,6BAAf,UACGuC,GACC,cAAC,EAAD,CACEf,OAAQA,EACR1B,QAAS,WACP0C,GAAU,GACVF,GAAO,kBAAMtB,OACbmB,EAAU,GACVD,GAAO,MAIb,kCACE,qBAAIlC,UAAU,MAAd,UACE,6BACE,cAAC,EAAD,CAAQF,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,SAErD,6BACE,cAAC,EAAD,CAAQvB,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,SAErD,6BACE,cAAC,EAAD,CAAQvB,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,YAGvD,qBAAIrB,UAAU,MAAd,UACE,6BACE,cAAC,EAAD,CAAQF,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,SAErD,6BACE,cAAC,EAAD,CAAQvB,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,SAErD,6BACE,cAAC,EAAD,CAAQvB,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,YAGvD,qBAAIrB,UAAU,MAAd,UACE,6BACE,cAAC,EAAD,CAAQF,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,SAErD,6BACE,cAAC,EAAD,CAAQvB,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,SAErD,6BACE,cAAC,EAAD,CAAQvB,QAAS,kBAAM2C,EAAKJ,EAAI,GAAG,KAAnC,SAAyCA,EAAI,GAAG,GAAGhB,qBCpFlDgC,MAtBf,YAA2C,IAA3BC,EAA0B,EAA1BA,IAAK9B,EAAqB,EAArBA,OAAQW,EAAa,EAAbA,UAU3B,OATAoB,qBAAU,WACR,IAAMC,EAAWC,aAAY,WACvBH,GACFnB,GAAU,SAACX,GAAD,OAAYA,EAAS,QAEhC,IACH,OAAO,kBAAMkC,cAAcF,MAC1B,CAACF,IAGF,qBAAKtD,UAAU,qDAAf,SACE,qBAAKA,UAAU,OAAf,SACG6B,IAASL,EAAQ,CAChBM,eAAe,EACfC,4BAA4B,SCDvB4B,MAZf,WAAgB,IAAD,EACSvB,oBAAS,GADlB,mBACNkB,EADM,KACDpB,EADC,OAEeE,mBAAS,GAFxB,mBAENZ,EAFM,KAEEW,EAFF,KAIb,OACE,sBAAKnC,UAAU,YAAf,UACE,cAAC,EAAD,CAAMsD,IAAKA,EAAK9B,OAAQA,EAAQW,UAAWA,IAC3C,cAAC,EAAD,CAAOD,OAAQA,EAAQC,UAAWA,EAAWX,OAAQA,QCA5CoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.730bd4eb.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Button({ onClick, children }) {\n  if (children) {\n    return <button className='numberButton' onClick={onClick}>{children}</button>;\n  } else {\n    return '';\n  }\n}\n\nexport default Button;\n","const baseValues = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"\"];\n\nconst numberList = [...baseValues];\n\nconst shuffleNumberList = () => {\n  for (let i = numberList.length - 2; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [numberList[i], numberList[j]] = [numberList[j], numberList[i]];\n  }\n  if (!isValid()) {\n    changeNotEmptyLastTwo();\n  }\n};\n\nconst isValid = () => {\n  let count = 0;\n  for (let i = 0; i < numberList.length - 2; i++) {\n    for (let j = i + 1; j < numberList.length - 1; j++) {\n      if (numberList[i] > numberList[j]) {\n        count++;\n      }\n    }\n  }\n  return count % 2 === 0;\n};\n\nconst changeNotEmptyLastTwo = () => {\n  const lastNotEmptyIndex = numberList.length - 2;\n  const lastNotEmptyElement = numberList[lastNotEmptyIndex];\n  numberList[lastNotEmptyIndex] = numberList[lastNotEmptyIndex - 1];\n  numberList[lastNotEmptyIndex - 1] = lastNotEmptyElement;\n};\n\nfunction initialValues() {\n  shuffleNumberList();\n  return { numberList, baseValues };\n}\n\nexport default initialValues;\n","import initialValues from \"./initialValues\";\n\nfunction initializeMap() {\n  const baseMap = [\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n    [\"\", \"\", \"\"],\n  ];\n\n  const { numberList } = initialValues();\n\n  const objectList = [\n    { x: 0, y: 0, text: numberList[0] },\n    { x: 0, y: 1, text: numberList[1] },\n    { x: 0, y: 2, text: numberList[2] },\n    { x: 1, y: 0, text: numberList[3] },\n    { x: 1, y: 1, text: numberList[4] },\n    { x: 1, y: 2, text: numberList[5] },\n    { x: 2, y: 0, text: numberList[6] },\n    { x: 2, y: 1, text: numberList[7] },\n    { x: 2, y: 2, text: numberList[8] },\n  ];\n\n  for (let i = 0; i < objectList.length; i++) {\n    const x = objectList[i].x;\n    const y = objectList[i].y;\n    baseMap[x][y] = objectList[i];\n  }\n\n  return baseMap;\n}\n\nexport default initializeMap;\n","import initialValues from \"./initialValues\";\n\nconst { baseValues } = initialValues();\nconst targetMap = [\n  [baseValues[0], baseValues[1], baseValues[2]],\n  [baseValues[3], baseValues[4], baseValues[5]],\n  [baseValues[6], baseValues[7], baseValues[8]],\n];\n\nexport default targetMap;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport prettyMs from \"pretty-ms\";\n\nfunction PopUp({ onClick, number }) {\n  return (\n    <Modal show={true}>\n      <Modal.Header>\n        <h3>Great, you solved the puzzle</h3>\n      </Modal.Header>\n      <Modal.Body>\n        Time:{\" \"}\n        {prettyMs(number, {\n          colonNotation: true,\n          keepDecimalsOnWholeSeconds: true,\n        })}\n      </Modal.Body>\n      <Modal.Footer>\n        <button onClick={onClick}>OK</button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default PopUp;\n","import React, { useState } from \"react\";\nimport Button from \"./Button\";\nimport initializeMap from \"./InitializeMap\";\nimport targetMap from \"./targetMap\";\nimport PopUp from \"./PopUp\";\n\nfunction Table({ setRun, setNumber, number }) {\n  const [map, setMap] = useState(() => initializeMap());\n  const [solved, setSolved] = useState(false);\n\n  const step = (clickedField) => {\n    const emptyField = searchEmptyField(map);\n    if (canStep(clickedField, emptyField)) {\n      changeFields(clickedField, emptyField);\n    }\n    isSolved();\n  };\n\n  const searchEmptyField = () => {\n    for (let i = 0; i < map.length; i++) {\n      for (let j = 0; j < map.length; j++) {\n        if (map[i][j].text === \"\") {\n          return map[i][j];\n        }\n      }\n    }\n  };\n\n  const canStep = (clickedField, emptyField) => {\n    if (\n      Math.abs(clickedField.x - emptyField.x) === 1 &&\n      clickedField.y === emptyField.y\n    ) {\n      return true;\n    }\n    if (\n      Math.abs(clickedField.y - emptyField.y) === 1 &&\n      clickedField.x === emptyField.x\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const changeFields = (fieldA, fieldB) => {\n    const tempMap = [[...map[0]], [...map[1]], [...map[2]]];\n    const tempText = fieldA.text;\n    tempMap[fieldA.x][fieldA.y].text = fieldB.text;\n    tempMap[fieldB.x][fieldB.y].text = tempText;\n    setMap(() => tempMap);\n  };\n\n  const isSolved = () => {\n    for (let i = 0; i < map.length; i++) {\n      for (let j = 0; j < map[i].length; j++) {\n        if (map[i][j].text !== targetMap[i][j]) {\n          return;\n        }\n      }\n    }\n    setSolved(true);\n    setRun(false);\n  };\n\n  return (\n    <>\n      <div className=\"row justify-content-center\">\n        {solved && (\n          <PopUp\n            number={number}\n            onClick={() => {\n              setSolved(false);\n              setMap(() => initializeMap());\n              setNumber(0);\n              setRun(true);\n            }}\n          />\n        )}\n        <table>\n          <tr className=\"col\">\n            <td>\n              <Button onClick={() => step(map[0][0])}>{map[0][0].text}</Button>\n            </td>\n            <td>\n              <Button onClick={() => step(map[0][1])}>{map[0][1].text}</Button>\n            </td>\n            <td>\n              <Button onClick={() => step(map[0][2])}>{map[0][2].text}</Button>\n            </td>\n          </tr>\n          <tr className=\"col\">\n            <td>\n              <Button onClick={() => step(map[1][0])}>{map[1][0].text}</Button>\n            </td>\n            <td>\n              <Button onClick={() => step(map[1][1])}>{map[1][1].text}</Button>\n            </td>\n            <td>\n              <Button onClick={() => step(map[1][2])}>{map[1][2].text}</Button>\n            </td>\n          </tr>\n          <tr className=\"col\">\n            <td>\n              <Button onClick={() => step(map[2][0])}>{map[2][0].text}</Button>\n            </td>\n            <td>\n              <Button onClick={() => step(map[2][1])}>{map[2][1].text}</Button>\n            </td>\n            <td>\n              <Button onClick={() => step(map[2][2])}>{map[2][2].text}</Button>\n            </td>\n          </tr>\n        </table>\n      </div>\n    </>\n  );\n}\n\nexport default Table;\n","import React, { useEffect } from \"react\";\nimport prettyMs from \"pretty-ms\";\n\nfunction Time({ run, number, setNumber }) {\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (run) {\n        setNumber((number) => number + 10);\n      }\n    }, 10);\n    return () => clearInterval(interval);\n  }, [run]);\n\n  return (\n    <div className=\"row justify-content-center align-items-center h-25\">\n      <div className=\"time\">\n        {prettyMs(number, {\n          colonNotation: true,\n          keepDecimalsOnWholeSeconds: true,\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Time;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport Table from \"./Table\";\nimport Time from \"./Time\";\n\nfunction App() {\n  const [run, setRun] = useState(true);\n  const [number, setNumber] = useState(0);\n\n  return (\n    <div className=\"container\">\n      <Time run={run} number={number} setNumber={setNumber} />\n      <Table setRun={setRun} setNumber={setNumber} number={number} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}